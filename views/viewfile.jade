extends layout

block stylesheets
  link(rel="stylesheet", href="http://blmarket.net/~blmarket/jsdifflib/diffview.css")
  style(type="text/css")
    ul.comments_list li > img {
      width: 50px;
      height: 50px;
    }

    #comments {
      height: 100%;
    }
    #comments form {
      height: 100%;
    }
    #comments textarea {
      width: 100%;
      height: 100%;
    }

block contents
  div
    h2 해야할 일
    ul
      li Show Diff only 옵션 추가하기
      li Coder Comments가 화면 하단이 아니라 오른쪽에 보이도록 하고. Markdown으로 markup하기
      li 다른 사람의 댓글들은 계속 화면 하단에 보이도록 하는 건 어떨까?
  #commitsha
  .row
    #diffOutput.span8
    #comments.span4(ng-controller="CommentsCtrl")
        ul.comments_list
          li(ng-repeat="comment in comments")
            {{comment.body}} by {{comment.user.login}}
            img(src="{{comment.user.avatar_url}}")
        form(ng-submit="submit()")
          input(type="submit") 댓글 달기
          textarea(ng-model="postcontents")

block scripts
  script(src="http://blmarket.net/~blmarket/jsdifflib/diffview.js")
  script(src="http://blmarket.net/~blmarket/jsdifflib/difflib.js")
  script(type="text/javascript")
    var data = !{data};
    var index = 0;
    var target = $('#diffOutput');
      
    function CommentsCtrl($scope, $http) {
      function update(commit) {
        $scope.commit = commit;
        $http.jsonp(
          "https://api.github.com/repos/#{repo.owner}/#{repo.name}/commits/"+commit+"/comments"+
          "?access_token=#{access_key}&callback=JSON_CALLBACK"
        ).success(function(data, status) {
          $scope.comments = data.data;
        });
      }

      function submit() {
        if(!($scope.commit)) return;
        $http.post(
          "https://api.github.com/repos/#{repo.owner}/#{repo.name}/commits/"+$scope.commit+"/comments?access_token=#{access_key}",
          {
            body: $scope.postcontents
          }
        ).success(function(data, status) {
          update($scope.commit);
          $scope.postcontents = '';
        });
      }

      $scope.comments = '';
      $scope.commit = '';
      $scope.update = update;
      $scope.submit = submit;
    }

    function update_diff() {
      var left = index - 1; if(left < 0) left = 0;
      var base = difflib.stringAsLines(data[left].code);
      var other = difflib.stringAsLines(data[index].code);
      
      var sm = new difflib.SequenceMatcher(base, other);
      target.empty();
      target.append(diffview.buildView({
        baseTextLines: base,
        newTextLines: other,
        opcodes: sm.get_opcodes(),
        baseTextName: 'Older Version',
        newTextName: 'Newer Version',
        contextSize: null,
        viewType: 1
      }));

      $('#commitsha').text(data[index].commit);
      angular.element(document.getElementById('comments')).scope().$apply(function(scope) {
        scope.update(data[index].commit);
      });
    }
    
    $(document).ready(update_diff);  
    $(window).keyup(function(ev) {
      if(ev.keyCode == 37) {
        index--; if(index < 0) index = 0; update_diff();
      } else if(ev.keyCode == 39) {
        index++; if(index >= data.length) index = data.length - 1; update_diff();
      }
    });

    function adjustHeight() {
      var t1 = $('#diffOutput');
      var t2 = $('#comments');

      var diff = t1.height() - t2.height();
      if(diff === 0) return;
      var t3 = $('#comments textarea');
      t3.height(t3.height() + diff);
    }

    window.setInterval(adjustHeight, 250);

